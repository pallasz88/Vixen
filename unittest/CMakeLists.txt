cmake_minimum_required(VERSION 3.13)

set(SOURCE_FILES unittest.cpp fixture.h)

include_directories(${PROJECT_SOURCE_DIR}/src/vixen)

set(Boost_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/Extensions)
set(BOOST_LIBRARYDIR ${PROJECT_SOURCE_DIR}/Extensions/lib)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)
find_package(Boost)

if (Boost_FOUND)
    message(STATUS "Boost Include: ${Boost_INCLUDE_DIR}")
    message(STATUS "Boost Libraries: ${Boost_LIBRARY_DIRS}")
    message(STATUS "Boost Libraries: ${Boost_LIBRARIES}")
    include_directories(${Boost_INCLUDE_DIRS})
    add_executable(unittest ${SOURCE_FILES})
    add_executable(perfttest perfttest.cpp)
    add_test(NAME UnitTest COMMAND unittest WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
    add_test(NAME PerftTest COMMAND perfttest WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
    target_link_libraries(unittest PRIVATE Engine ${Boost_LIBRARIES})
    target_link_libraries(perfttest PRIVATE Engine ${Boost_LIBRARIES})
    target_compile_features(unittest PRIVATE cxx_std_20)
    target_compile_features(perfttest PRIVATE cxx_std_20)
endif ()

if (ENABLE_COVERAGE)
    message(STATUS "Generate GCOV input")
    target_compile_options(perfttest PRIVATE -O0 --coverage -fprofile-arcs -ftest-coverage -g)
    target_compile_options(unittest PRIVATE -O0 --coverage -fprofile-arcs -ftest-coverage -g)
    target_link_libraries(perfttest PRIVATE --coverage)
    target_link_libraries(unittest PRIVATE --coverage)
endif()

install(TARGETS perfttest DESTINATION bin)
install(TARGETS unittest perfttest DESTINATION bin)
